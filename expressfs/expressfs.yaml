apiVersion: project.openshift.io/v1
description: "Expressfs for MAS"
displayName: expressfs
kind: ProjectRequest
metadata:
    name: expressfs
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: expressfs-data-pvc
  namespace: expressfs
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 2Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:  
  name: expressfs     
  namespace: expressfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: expressfs
  template:
    metadata:     
      labels:
        app: expressfs
        deploymentconfig: expressfs
    spec:
      containers:
        - name: expressfs
          image: quay.io/istrate/expressfs:1.0.0
          ports:
            - containerPort: 8080
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          volumeMounts:
            - name: expressfs-data-volume
              mountPath: /usr/src/app/store
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: expressfs-data-volume
          persistentVolumeClaim:
            claimName: expressfs-data-pvc
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: v1
kind: Service
metadata:
  name: expressfs
  namespace: expressfs
spec:
  selector:
    app: expressfs
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: expressfs
  namespace: expressfs
spec:
  path: /
  to:
    kind: Service
    name: expressfs
  port:
    targetPort: 8080
